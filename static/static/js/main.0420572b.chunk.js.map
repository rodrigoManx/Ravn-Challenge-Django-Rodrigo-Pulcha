{"version":3,"sources":["img/ArrowRight.svg","img/ActivityIndicator.svg","components/Cells.js","services/UtilsService.js","components/StarWarsListInfiniteScroll.js","services/StarWarsApiService.js","img/BackArrow.svg","components/Header.js","screens/StarWarsList.js","components/InfoSection.js","components/StarWarsItemDetail.js","screens/StarWarsDetail.js","screens/StarWarsHome.js","App.js","reportWebVitals.js","index.js"],"names":["DataCell","property","value","Fragment","className","style","textAlign","width","LoadingCell","src","ActivityIndicator","NoticeCell","text","ItemCell","data","object","path","pathKey","description","name","to","encodeURI","ArrowRight","getErrorMessageOfStatus","status","handleHttpError","extraMsg","messageError","console","log","handleConnectionError","err","StarWarsListInfiniteScroll","useState","page","setPage","locked","setLock","error","setError","end","setEnd","items","setItems","get","setGet","loader","useRef","getRows","table","fetch","process","then","response","ok","json","catch","alert","fetchList","results","concat","useEffect","observer","IntersectionObserver","handleObserver","root","rootMargin","threshold","current","observe","entities","isIntersecting","map","item","i","ref","Header","title","canBack","BackArrow","onClick","window","history","back","OBJECTS","starships","field","starshipClass","starship_class","charAt","toUpperCase","slice","people","species","homeworld","StarWarsList","props","state","undefined","this","match","params","setState","Component","SectionHeader","InfoSection","sectionTitle","fields","Array","isArray","element","displayName","StarWarsItemDetail","id","screen","setData","loading","getDetail","fetchDetail","generalInformation","relations","relation","index","connection","information","person","starship","StarWarsDetail","LISTS","StarWarsHome","App","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0420572b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ArrowRight.1b02fef7.svg\";","export default __webpack_public_path__ + \"static/media/ActivityIndicator.014e4797.svg\";","import React from 'react';\nimport ArrowRight from '../img/ArrowRight.svg';\nimport ActivityIndicator from '../img/ActivityIndicator.svg';\nimport { Link } from 'react-router-dom';\n\n\nexport function DataCell({property, value}) {\n    return (\n        <React.Fragment>\n            <div className={\"cell data-cell\"}>\n                <div style={{textAlign: \"left\", width: value !== \"\"? \"50%\":\"100%\"}}>\n                    <h2 className={\"low-emphasis\"}>{property}</h2>\n                </div>\n                {\n                    value !== \"\"? (\n                        <div style={{textAlign: \"right\", width: \"50%\"}}>\n                            <h2>{value}</h2>\n                        </div>\n                    ): (<div/>)\n                }\n            </div>\n            <hr/>\n        </React.Fragment>\n    )\n}\n\nexport function LoadingCell() {\n    return (\n        <div className={\"cell loading-cell\"}>\n            <img className={\"activity-indicator\"} src={ActivityIndicator}/>\n            <h2 className={\"low-emphasis\"}>Loading</h2>\n        </div>\n    )\n}\n\nexport function NoticeCell({text}) {\n    return (\n        <div className={\"cell\"}>\n            <h2 className={\"high-emphasis\"}>{text}</h2>\n        </div>\n    )\n}\n\nexport function ItemCell({data, object}) {\n    const path = object.pathKey && data[object.pathKey]? object.path + data[object.pathKey] : data.path;\n    const description = object.description? object.description(data) : data.description;\n    return (\n        data.name && path?(\n            <Link to={encodeURI(path)}>\n                <div className={\"cell item-cell\"}>\n                    <div>\n                        <React.Fragment>\n                            <h2>{data.name}</h2>\n                            <p className={\"low-emphasis\"}> { description } </p>\n                        </React.Fragment>        \n                    </div>\n                    <img className={\"cell-arrow-right\"} src={ArrowRight}/>\n                </div>\n            </Link>\n        ):( <div/> )\n    )\n}","export function getQueryParamsAsObj() {\n    let query = window.location.search.substring(1);\n    let vars = query.split(\"&\");\n    let ret = {};\n    for (let i = 0; i < vars.length; i++) {\n        let pair = vars[i].split(\"=\");\n        ret[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return ret;\n}\nexport function getErrorMessageOfStatus(status) {\n    switch (true) {\n        case status === 401:\n            return \"\";\n        case status === 405:\n            return \"No se permite el uso del método, ya estamos trabajando para resolverlo\";\n        case status >= 400 && status < 500:\n            return \"Algo salió mal, pruede probar recargando la página\";\n        case status >= 500:\n            return \"A ocurido un error, ya estamos trabajando para resolverlo. Intenta más tarde\";\n        default:\n            return \"Algo salió mal, ya estamos trabajando para resolverlo, intenta más tarde\";\n    }\n}\nexport function handleHttpError(status, extraMsg = \"\") {\n    const messageError = getErrorMessageOfStatus(status);\n    if (messageError) {\n        console.log(`Error ${status} ${extraMsg}:\n        ${messageError}`);\n    }\n}\n\nexport function handleConnectionError(err) {\n    console.log(\"Connection error:\", err);\n}\n","import React, { useEffect, useState, useRef } from 'react';\nimport { NoticeCell, LoadingCell, ItemCell } from \"./Cells\"\nimport { fetchList } from '../services/StarWarsApiService';\n\n\nexport function StarWarsListInfiniteScroll({object}) {\n    const [page, setPage] = useState(1);\n    const [locked, setLock] = useState(false);\n    const [error, setError] = useState(false);\n    const [end, setEnd] = useState(false);\n    const [items, setItems] = useState([]);\n    const [get, setGet] = useState(false);\n    const loader = useRef(null);\n\n    const getRows = (page) => {\n        fetchList(object.table, page).then(\n            (data) => {\n                if (!data) {\n                    setError(true)\n                }\n                else if (data.results) {\n                    setItems(items.concat(data.results))\n                    setLock(false)\n                    setGet(false)\n                }\n                else {\n                    setEnd(true);\n                }\n            }\n        )\n    };\n\n    useEffect(() => {\n        if (get){\n            getRows(page);\n        }\n    }, [get]);\n\n    useEffect(() => {\n        if (locked){\n            setGet(false)\n        }\n    }, [locked]);\n\n    useEffect(() => {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 0.2\n            }\n        const observer = new IntersectionObserver(handleObserver, options);\n        if (loader.current) {\n            observer.observe(loader.current)\n        }\n    }, [locked, get, items]);\n\n    const handleObserver = (entities) => {\n        const target = entities[0];\n        \n        if (target.isIntersecting && !locked) {\n            setGet(true)\n            setPage(page + 1)\n        }\n    }\n\n    if (error) return <NoticeCell text={\"Failed to Load Data\"}/>;\n    if (!items) return <div className=\"loading\" ref={loader}><LoadingCell/></div>\n    return (\n        <div>\n            {\n                items.map((item, i) => (\n                    <ItemCell key={i} data={item} object={object}/>\n                ))\n            }\n            {\n                !end? (\n                    <div className=\"loading\" ref={loader}>\n                        <LoadingCell/>\n                    </div>\n                ):(\n                    <div className=\"loading\" ref={loader}></div>\n                )\n            }\n        </div>\n        \n    )\n}\n","import { handleHttpError, handleConnectionError } from \"./UtilsService\";\n\n\nexport function fetchList(table, page=1) {\n  return fetch(process.env.REACT_APP_API_SERVER + \"/app/\" + table + \"/?page=\" + page, {})\n  .then((response) => {\n      if (!response.ok) {\n          handleHttpError(response.status);\n          return {};\n      }\n      return response.json();\n  }, handleConnectionError)\n  .catch((error) => {\n      alert(error);\n      return;\n  });\n}\n\nexport function fetchDetail(table, id) {\n  return fetch(process.env.REACT_APP_API_SERVER + \"/app/\" + table + \"/detail/\" + id + \"/\", {})\n  .then((response) => {\n      if (!response.ok) {\n          handleHttpError(response.status);\n          return {};\n      }\n      return response.json();\n  }, handleConnectionError)\n  .catch((error) => {\n      alert(error);\n      return;\n  });\n}","export default __webpack_public_path__ + \"static/media/BackArrow.9f2db49f.svg\";","import BackArrow from '../img/BackArrow.svg';\n\n\nexport function Header({title, canBack}) {\n    return (\n        <div className={\"header\"}>\n            {\n                canBack?(\n                    <img className={\"back-arrow\"} src={BackArrow} onClick={() => {window.history.back()}}/>\n                ):(\n                    <div/>\n                )\n            }\n            <h2>{title}</h2>\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { StarWarsListInfiniteScroll } from '../components/StarWarsListInfiniteScroll';\nimport { Header } from '../components/Header';\n\n\nconst OBJECTS = {\n    starships: {\n        name: \"Starships\",\n        table: \"starship\",\n        field: \"allStarships\",\n        path: \"/detail/starship/\",\n        pathKey: \"id\",\n        description: (data) => {\n            let starshipClass = data.starship_class? data.starship_class : \"Unknown\";\n            starshipClass = starshipClass.charAt(0).toUpperCase() + starshipClass.slice(1)\n            return starshipClass + \" class\";\n        }\n    },\n    people: {\n        name: \"People\",\n        table: \"people\",\n        field: \"allPeople\",\n        path: \"/detail/person/\",\n        pathKey: \"id\",\n        description: (data) => {\n            let specie = data.species? data.species : \"Human\";\n            let homeworld = data.homeworld? data.homeworld : \"Tatooine\";\n            return specie + \" from \" + homeworld;\n        }\n    },\n}\n\nexport default class StarWarsList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            object: undefined\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.object) {\n            this.setState({object: this.props.match.params.object})\n        }\n    }\n    \n    render() {\n        return (\n            this.state.object?(\n                <React.Fragment>\n                    <Header title={OBJECTS[this.state.object].name + \" of Star Wars\"} canBack={true}/>\n                    <StarWarsListInfiniteScroll object={OBJECTS[this.state.object]}/>\n                </React.Fragment>\n            ):(\n                <div/>\n            )\n        );\n    }\n}","import { DataCell } from \"./Cells\"\n\n\nfunction SectionHeader({title}) {\n    return (\n        <div className={\"section-header\"}>\n            <h2>{title}</h2>\n        </div>\n    )\n}\n\nexport function InfoSection({sectionTitle, data, fields}) {\n    return (\n        <div>\n            <SectionHeader title={sectionTitle}/>\n            {\n                Array.isArray(data)? (\n                    data.map((element, i) => (\n                        <DataCell key={i} value=\"\" property={element[fields]}/>        \n                    ))\n                ):(\n                    fields.map((element, i) => (\n                        <DataCell key={i} property={element.displayName} value={data[element.property]}/>        \n                    ))\n                )\n            }\n        </div>\n    )\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { NoticeCell, LoadingCell } from \"./Cells\";\nimport { InfoSection } from \"./InfoSection\";\nimport { Header } from './Header';\nimport { fetchDetail } from '../services/StarWarsApiService';\n\n\nexport function StarWarsItemDetail({id, object, screen}) {\n    const [error, setError] = useState(false);\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n\n    const getDetail = () => {\n        fetchDetail(object.table, id).then(\n            (data) => {\n                setData(data);\n            }\n        ).catch((error) => {\n            setError(true)\n        }); ;\n    };\n\n    useEffect(() => {\n        getDetail();\n    }, []);\n\n    if (loading) return (\n        <React.Fragment>\n            <Header title={\"\"} canBack={true}/><LoadingCell/>\n        </React.Fragment>\n    )\n    if (error) return (\n        <React.Fragment>\n            <NoticeCell text={\"Failed to Load Data\"}/>\n        </React.Fragment>\n    )\n    \n    if (!data) {\n        return <div></div>\n    }\n    return (\n        <div>\n            <Header title={data.name} canBack={true}/>\n            <InfoSection sectionTitle=\"General Information\" data={data} fields={object.generalInformation} />\n            {\n                object.relations.map((relation, index) => (\n                    <InfoSection\n                        key={index}\n                        sectionTitle={relation.displayName}\n                        data={data[relation.connection]} fields={relation.information} />\n                ))\n            }\n        </div>\n    )\n}","import React, { Component } from 'react';\nimport { StarWarsItemDetail } from '../components/StarWarsItemDetail'\n\n\nconst OBJECTS = {\n    person: {\n        name: \"person\",\n        table: \"people\",\n        relations: [\n            {connection: 'vehicles', name: 'vehicles', information: \"name\", displayName: \"Vehicles\"},\n            {connection: 'starships', name: 'starships', information: \"name\", displayName: \"Starships\"},\n        ],\n        generalInformation: [\n            { property: 'eye_color', displayName: \"Eye Color\"},\n            { property: 'hair_color', displayName: \"Hair Color\"},\n            { property: 'skin_color', displayName: \"Skin Color\"},\n            { property: 'birth_year', displayName: \"Birth Year\"},\n        ]\n    },\n    starship: {\n        name: \"starship\",\n        table: \"starship\",\n        relations: [\n            {connection: 'pilots', name: 'pilots', information: \"name\", displayName: \"Pilots\"},\n            {connection: 'films', name: 'films', information: \"title\", displayName: \"Films\"},\n        ],\n        generalInformation: [\n            { property: 'model', displayName: \"Model\"},\n            { property: 'cost_in_credits', displayName: \"Cost in Credits\"},\n            { property: 'length', displayName: \"Length\"},\n            { property: 'crew', displayName: \"Crew\"},\n            { property: 'cargo_capacity', displayName: \"Capacity\"},\n        ] \n    }\n}\n\n\nexport default class StarWarsDetail extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: undefined,\n            id: undefined,\n            object: undefined\n        };\n    }\n\n    componentDidMount() {\n        if (this.props.match.params.object && this.props.match.params.id) {\n            this.setState({\n                object: this.props.match.params.object,\n                id: this.props.match.params.id\n            })\n        }\n    }\n    \n    render() {\n        return (\n            this.state.object && this.state.id? (\n                <React.Fragment>\n                    <StarWarsItemDetail\n                        id={this.state.id}\n                        object={OBJECTS[this.state.object]}\n                        screen={this}\n                    />\n                </React.Fragment>\n            ):(\n                <div/>\n            )\n        );\n    }\n}","import React, { Component } from 'react';\nimport { Header } from '../components/Header';\nimport { ItemCell } from \"../components/Cells\"\n\n\nconst LISTS = [\n    {\n        name: \"People from Stat Wars\",\n        path: \"/list/people/\",\n    },\n    {\n        name: \"Starships from Stat Wars\",\n        path: \"/list/starships/\",\n    }\n]\n\nexport default class StarWarsHome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        };\n    }\n\n    componentDidMount() {\n    }\n    \n    render() {\n        return (\n            <React.Fragment>\n                <Header title=\"Star Wars\" canBack={false}/>\n                {\n                    LISTS.map((item, index) => (\n                        <ItemCell key={index} data={item} object={{}}/>\n                    ))\n                }\n            </React.Fragment>\n        );\n    }\n}","import './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport StarWarsList from './screens/StarWarsList';\nimport StarWarsDetail from './screens/StarWarsDetail';\nimport StarWarsHome from './screens/StarWarsHome';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\" component={StarWarsHome}/>\n          <Route exact path=\"/list/:object\" component={StarWarsList}/>\n          <Route exact path=\"/detail/:object/:id\" component={StarWarsDetail}/>\n        </Switch>\n      </div>\n    </BrowserRouter>    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}